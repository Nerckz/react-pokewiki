{"version":3,"sources":["components/articles/Articles.jsx","hooks/useFetchGetPokeInfo.js","components/feed/Feed.jsx","components/topbar/Topbar.jsx","pages/home/Home.jsx","pages/pokemonPage/PokemonPage.jsx","hooks/useFetchPagePokeInfo.js","App.js","hooks/useFetchGetPokemons.js","index.js"],"names":["Articles","pokemon","setPokePageUrl","images","useState","state","setState","useEffect","handleGetPokeInfo","a","pokeUrl","url","fetch","resp","json","data","useFetchGetPokeInfo","onClick","to","style","textDecorationLine","className","name","src","sprites","front_default","alt","Feed","pokemons","map","item","Topbar","Home","items","PokemonPage","pokemonUrl","pokeInfo","pokeSprites","handlePokeInfoGet","then","back_default","back_shiny","front_shiny","document","write","pokeInfoUrl","useFetchPagePokeInfo","handlePokeImgAvatar","e","pokeImgAvatar","querySelector","srcPokeImg","target","abilities","ability","stats","stat","base_stat","sprite","bind","length","App","handleGetPokemons","results","useFetchGetPokemons","pokePageUrl","exact","path","divRoot","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.103d092a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useFetchGetPokeInfo } from '../../hooks/useFetchGetPokeInfo';\r\nimport './articles.css';\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n\r\nexport const Articles = ({ pokemon, setPokePageUrl }) => {\r\n    const { images } = useFetchGetPokeInfo(pokemon);\r\n\r\n    const setPokeUrl = () => {\r\n        setPokePageUrl(pokemon);\r\n    }\r\n\r\n    return (\r\n        <Link onClick={setPokeUrl} to='/pokeinfo' style={{ textDecorationLine: \"none\" }}  >\r\n            <div className=\"articlesContainer\">\r\n                <h2 className=\"pokeName\">{pokemon.name}</h2>\r\n                <img src={images.sprites?.front_default} alt=\"\" className=\"pokeImage\" />\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetchGetPokeInfo = (pokemon) => {\r\n    const [state, setState] = useState({\r\n        images: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        handleGetPokeInfo();\r\n    }, [pokemon]);\r\n\r\n    const handleGetPokeInfo = async () => {\r\n        const pokeUrl = pokemon.url;\r\n        const resp = await fetch(pokeUrl);\r\n        const data = await resp.json();\r\n\r\n        setState({\r\n            images: data\r\n        });\r\n    }\r\n\r\n    return state;\r\n}","import React from 'react';\r\nimport { Articles } from '../articles/Articles';\r\nimport './feed.css';\r\n\r\nexport const Feed = ({ pokemons, setPokePageUrl }) => {\r\n    return (\r\n        <div className=\"feedContainer\">\r\n            <div className=\"feedContainerWrapper\">\r\n                <div className=\"feedArticles\">\r\n                    {pokemons.map(item => (\r\n                        <Articles key={item.name} pokemon={item} setPokePageUrl={setPokePageUrl} />\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport './topbar.css';\r\nimport {\r\n    Link\r\n} from 'react-router-dom';\r\n\r\nexport const Topbar = () => {\r\n    return (\r\n        <div className=\"topbarContainer\">\r\n            <div className=\"topbarContainerWrapper\">\r\n                <div className=\"topbarLeft\">\r\n                    <Link to=\"/\" style={{ textDecorationLine: \"none\" }}>\r\n                        <div className=\"topbarLogo\">\r\n                            Pok√©<img className=\"pokeImg\" src=\"assets/img/pokeball.png\" alt=\"pokeball\" />Wiki\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className=\"topbarRight\">\r\n                    <ul className=\"topbarMenu\">\r\n                        <Link to=\"/\" style={{ textDecorationLine: \"none\" }}>\r\n                            <li>Homepage</li>\r\n                        </Link>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Feed } from '../../components/feed/Feed';\r\nimport { Topbar } from '../../components/topbar/Topbar';\r\n\r\nexport const Home = ({ items, setPokePageUrl }) => {\r\n    return (\r\n        <>\r\n            <Topbar />\r\n            <Feed pokemons={items} setPokePageUrl={setPokePageUrl} />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { Topbar } from '../../components/topbar/Topbar';\r\nimport { useFetchPagePokeInfo } from '../../hooks/useFetchPagePokeInfo';\r\nimport './pokemonpage.css';\r\n\r\nexport const PokemonPage = ({ pokemonUrl }) => {\r\n    const { pokeInfo, pokeSprites } = useFetchPagePokeInfo(pokemonUrl);\r\n\r\n    const handlePokeImgAvatar = (e) => {\r\n        let pokeImgAvatar = document.querySelector('.pokeImgAvatar');\r\n        let srcPokeImg = e.target.src;\r\n\r\n        pokeImgAvatar.src = srcPokeImg;\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Topbar />\r\n\r\n            <div className=\"pokePageContainer\">\r\n\r\n                <div className=\"pokeInfoCard\">\r\n                    <div className=\"pokeInfoCardTop\">\r\n                        <h2>{pokeInfo?.name}</h2>\r\n                    </div>\r\n\r\n                    <div className=\"pokeInfoCardCenter\">\r\n                        <div className=\"pokeAbilities\">\r\n                            <h2>Abilities</h2>\r\n\r\n                            <ul>\r\n                                {pokeInfo?.abilities?.map(ability => (\r\n                                    <li key={ability.ability.name}>{ability.ability.name}</li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n\r\n                        <div className=\"pokeImgContainer\">\r\n                            <img\r\n                                src={pokeInfo?.sprites?.front_default}\r\n                                alt=\"\"\r\n                                className=\"pokeImgAvatar\"\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"pokeStats\">\r\n                            <h2>Stats</h2>\r\n\r\n                            <ul>\r\n                                {pokeInfo?.stats?.map(stat => (\r\n                                    <li key={stat.stat.name}><span className=\"statName\">{stat.stat.name}</span> <span className=\"statValue\">{stat.base_stat}</span></li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"pokeInfoCardBottom\">\r\n                        <div className=\"pokeSprites\">\r\n                            <div className=\"pokeSpriteImgContainer\">\r\n                                {pokeSprites?.map(sprite => (\r\n                                    <img onClick={handlePokeImgAvatar.bind()} key={sprite.length} src={sprite} className=\"pokeSpriteImg\" alt={sprite} />\r\n                                ))}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetchPagePokeInfo = (pokemonUrl) => {\r\n    const [state, setState] = useState({\r\n        pokeInfo: [],\r\n        pokeSprites: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        handlePokeInfoGet().then(data => {\r\n            setState({\r\n                pokeInfo: data,\r\n                pokeSprites: [\r\n                    data?.sprites?.back_default,\r\n                    data?.sprites?.back_shiny,\r\n                    data?.sprites?.front_default,\r\n                    data?.sprites?.front_shiny,\r\n                ]\r\n            });\r\n        });\r\n    }, [pokemonUrl.url]);\r\n\r\n    const handlePokeInfoGet = async () => {\r\n        if (!pokemonUrl.url) {\r\n            return document.write('No pokemon url found');\r\n        }\r\n\r\n        const pokeInfoUrl = pokemonUrl.url;\r\n        const resp = await fetch(pokeInfoUrl);\r\n        const data = await resp.json();\r\n\r\n        return data;\r\n    }\r\n\r\n    return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport { Home } from './pages/home/Home';\r\nimport { PokemonPage } from './pages/pokemonPage/PokemonPage';\r\nimport { useFetchGetPokemons } from './hooks/useFetchGetPokemons';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n} from 'react-router-dom';\r\n\r\nexport const App = () => {\r\n    const { pokemons } = useFetchGetPokemons();\r\n    const [pokePageUrl, setPokePageUrl] = useState([]);\r\n\r\n    return (\r\n        <Router>\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <Home items={pokemons} setPokePageUrl={setPokePageUrl} />\r\n                </Route>\r\n\r\n                <Route exact path=\"/pokeinfo\">\r\n                    <PokemonPage pokemonUrl={pokePageUrl} />\r\n                </Route>\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}","import { useState, useEffect } from \"react\";\r\n\r\nexport const useFetchGetPokemons = () => {\r\n    const [state, setState] = useState({\r\n        pokemons: []\r\n    });\r\n\r\n    useEffect(() => {\r\n        handleGetPokemons();\r\n    }, []);\r\n\r\n    const handleGetPokemons = async () => {\r\n        const apiUrl = 'https://pokeapi.co/api/v2/pokemon';\r\n        const resp = await fetch(apiUrl);\r\n        const { results } = await resp.json();\r\n\r\n        setState({\r\n            pokemons: results\r\n        });\r\n    }\r\n\r\n    return state;\r\n} ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './App';\r\n\r\nconst divRoot = document.getElementById('root');\r\n\r\nReactDOM.render(\r\n    <App />,\r\n    divRoot\r\n)"],"sourceRoot":""}